{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Network Configuration",
  "type": "object",
  "properties": {
    "network_type": {
      "type": "string",
      "enum": ["AE", "AEE", "DAE", "DAEE"],
      "description": "Type of the network architecture."
    },
    "dataset_type": {
      "type": "string",
      "enum": ["texture_1", "texture_2", "cpu"],
      "description": "The name of the selected dataset."
    },
    "subtest_folder": {
      "type": "string",
      "description": "The name of the selected subtest folder."
    },
    "vis_results": {
      "type": "boolean",
      "description": "Whether to visualize the results."
    },
    "vis_reconstruction": {
      "type": "boolean",
      "description": "Whether to visualize reconstructed images"
    },
    "grayscale": {
      "type": "boolean",
      "description": "Whether to use grayscale or not."
    },
    "img_size": {
      "type": "array",
      "items": {
        "type": "integer"
      },
      "minItems": 2,
      "maxItems": 2,
      "description": "Size of the input images as [width, height]."
    },
    "crop_size": {
      "type": "array",
      "items": {
        "type": "integer"
      },
      "minItems": 2,
      "maxItems": 2,
      "description": "Size of the crops extracted from the image as [width, height]."
    },
    "stride": {
      "type": "integer",
      "description": "Size of the stride for cropping or other operations."
    },
    "device": {
      "type": "string",
      "enum": ["cuda", "cpu"]
    },
    "threshold_init": {
      "type": "number"
    },
    "threshold_end": {
      "type": "number"
    },
    "num_of_steps": {
      "type": "integer"
    }
  },
  "required": [
    "network_type",
    "dataset_type",
    "vis_results",
    "img_size",
    "crop_size",
    "stride",
    "grayscale",
    "device"
  ],
  "if": {
    "properties": {
      "dataset_type": {
        "enum": ["texture_1", "texture_2"]
      }
    }
  },
  "then": {
    "properties": {
      "subtest_folder": {
        "type": "string",
        "enum": ["defective"]
      }
    },
    "required": ["subtest_folder"]
  },
  "else": {
    "if": {
      "properties": {
        "dataset_type": {
          "enum": ["cpu"]
        }
      }
    },
    "then": {
      "properties": {
        "subtest_folder": {
          "type": "string",
          "enum": ["cpua", "cpuc", "cpum"]
        }
      },
      "required": ["subtest_folder"]
    }
  }
}
